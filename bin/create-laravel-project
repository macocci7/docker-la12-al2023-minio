#!/bin/bash
# @usage create-laravel-project
# @description creates Laravel 12 project in html/ on your host.
# @description super user priviledges required.
# @example create-laravel-project

LARAVEL_VERSION=12
PROJECT_NAME='html'
PROJECT_DIR=$(pwd)/${PROJECT_NAME}
SCRIPT_DIR=$(cd $(dirname $0) && pwd)
INCLUDE_DIR=$(cd ${SCRIPT_DIR}/../include && pwd)

# imports external scripts
. ${INCLUDE_DIR}/colorizable

is_empty_dir () {
    ENTRIES=`ls -a -I '.' -I '..' $1`
    if [ -z "${ENTRIES}" ]; then
        # empty
        return 0
    else
        # not empty
        return 1
    fi
}

clean_up_dir () {
    if [ ! -d $1 ]; then
        print_bg_red "Directory [${1}] not found."
        print_bg_red "Operation aborted."
        exit 1
    fi
    if [ ! -x $1 ]; then
        print_bg_red "No permission to enter [${1}]."
        print_bg_red "Operation aborted."
        exit 1
    fi
    cd $1
    for ENTRY in `ls -a -I '.' -I '..'`; do
        sudo rm -rf $ENTRY
    done
}

echo "Creating a new Laravel ${LARAVEL_VERSION} Project..."
is_empty_dir $PROJECT_DIR
if [ $? -eq 1 ]; then
    print_bg_red "Project directory [${PROJECT_DIR}] is not empty."
    CAN_CLEAN_UP=""
    while [[ ! "$CAN_CLEAN_UP" =~ ^[ny]$ ]]; do
        echo -n "Would you like to clean up? [y/n]:"
        read CAN_CLEAN_UP
    done
    if [ $CAN_CLEAN_UP = "y" ]; then
        echo "Cleaning up directory [${PROJECT_DIR}]..."
        clean_up_dir $PROJECT_DIR
        print_bg_green "Done."
    else
        print_bg_red "Operation aborted."
        exit 1
    fi
fi

COMMAND="composer create-project laravel/laravel:^${LARAVEL_VERSION} ${PROJECT_DIR}"
print_cyan "> ${COMMAND}"
$COMMAND
cd ${PROJECT_DIR}
COMMAND='composer require league/flysystem-aws-s3-v3:^3.0 --with-all-dependencies'
print_cyan "> ${COMMAND}"
$COMMAND
